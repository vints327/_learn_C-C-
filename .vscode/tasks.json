// 定义了Visual Studio Code中的任务配置文件tasks.json，用于配置C/C++项目的构建任务
{
    "version": "2.0.0",
    "tasks": [
        // 任务1: Build C++
        {
            "label": "Build ping with MSVC",
            "type": "shell",
            "command": "g++",
            /* "args": [
                "/EHsc",  // 启用 C++ 异常处理
                "/Fe:ping.exe",  // 输出文件名
                "${workspaceFolder}/net/ping.cpp",  // 指定源文件路径
                "/I", "D:/vcpkg/installed/x64-windows/include",  // 添加 vcpkg 的头文件路径
                "/link",  // 开始链接选项
                "/LIBPATH:D:/vcpkg/installed/x64-windows/lib",  // 添加 vcpkg 的库文件路径
                "ws2_32.lib",  // 链接 ws2_32 库
                "icmp.lib"  // 链接 icmp 库
            ], */
            "args": [
                "\"${workspaceFolder}\\net\\icmp-test.cpp\"",
                "-o",
                "\"${workspaceFolder}\\net\\icmp-test.exe\"",
                "-I", "D:/vcpkg/installed/x64-windows/include",  // 添加 vcpkg 的头文件路径
                "-L", "D:/vcpkg/installed/x64-windows/lib",     // 添加 vcpkg 的库文件路径
                "-I", "${workspaceFolder}\\npcap-sdk-1.13\\Include",  // 添加 vcpkg 的头文件路径
                "-L", "${workspaceFolder}\\npcap-sdk-1.13\\Lib\\x64",     // 添加 vcpkg 的库文件路径
                "-lws2_32",
                "-lwpcap",
                "-lPacket"
                // "-lnpcap"  // 链接 npcap 库
            ],
            "group": "build",
            "problemMatcher": [
                "$msCompile"
            ],
            "detail": "Generated task by VS Code",
            "options": {
                "cwd": "${workspaceFolder}"  // 确保工作目录是项目根目录
            }
        },
        {
            // 任务的名称，显示在VS Code的任务选择器中。
            "label": "Build C++",
            // 指定任务类型为shell命令。
            "type": "shell",
            // 使用g++编译器进行编译。
            "command": "g++",
            // 编译参数包括调试信息（-g）、源文件路径（main.cpp）、输出文件名（main.exe），以及vcpkg库的头文件和库文件路径。
            "args": [
                "\"${workspaceFolder}\\httplib-server\\main.cpp\"",
                "-o",
                "\"${workspaceFolder}\\httplib-server\\main.exe\"",
                "-I", "D:/vcpkg/installed/x64-windows/include",  // 添加 vcpkg 的头文件路径
                "-L", "D:/vcpkg/installed/x64-windows/lib",     // 添加 vcpkg 的库文件路径
                "-lws2_32",
                "-lhttplib"
            ],
            // 将此任务归类为构建任务。
            "group": "build",
            // 问题匹配器：使用GCC编译器的问题匹配器来捕获编译错误和警告。
            "problemMatcher": [
                "$gcc"
            ],
            // 详细信息：描述任务的来源。
            "detail": "Generated task by VS Code",
            "options": {
                "cwd": "${workspaceFolder}"  // 确保工作目录是项目根目录
            }
        },
        {
            // 任务的名称，显示在VS Code的任务选择器中。
            "label": "Build httplib-server mvc",
            // 指定任务类型为shell命令。
            "type": "shell",
            // 使用g++编译器进行编译。
            "command": "g++",
            // 编译参数包括调试信息（-g）、源文件路径（main.cpp）、输出文件名（main.exe），以及vcpkg库的头文件和库文件路径。
            "args": [
                "\"${workspaceFolder}\\httplib-server\\mvc\\main.cpp\"",
                "\"${workspaceFolder}\\httplib-server\\mvc\\View.cpp\"",
                "\"${workspaceFolder}\\httplib-server\\mvc\\Controller.cpp\"",
                "\"${workspaceFolder}\\httplib-server\\mvc\\Model.cpp\"",
                "-o",
                "\"${workspaceFolder}\\httplib-server\\mvc\\main.exe\"",
                "-I", "D:/vcpkg/installed/x64-windows/include",  // 添加 vcpkg 的头文件路径
                "-L", "D:/vcpkg/installed/x64-windows/lib",     // 添加 vcpkg 的库文件路径
                "-lws2_32",
                // "-lhttplib"
                "-g"  // 启用调试信息
            ],
            // 将此任务归类为构建任务。
            "group": "build",
            // 问题匹配器：使用GCC编译器的问题匹配器来捕获编译错误和警告。
            "problemMatcher": [
                "$gcc"
            ],
            // 详细信息：描述任务的来源。
            "detail": "Generated task by VS Code",
            "options": {
                "cwd": "${workspaceFolder}"  // 确保工作目录是项目根目录
            }
        },
        {
            // 任务的名称，显示在VS Code的任务选择器中。
            "label": "Build httplib-server-mvc",
            // 指定任务类型为shell命令。
            "type": "shell",
            // 使用g++编译器进行编译。
            "command": "g++",
            // 编译参数包括调试信息（-g）、源文件路径（main.cpp）、输出文件名（main.exe），以及vcpkg库的头文件和库文件路径。
            "args": [
                "\"${workspaceFolder}\\httplib-server-mvc\\main.cpp\"",
                "\"${workspaceFolder}\\httplib-server-mvc\\src\\views\\JsonView.cpp\"",
                "\"${workspaceFolder}\\httplib-server-mvc\\src\\controllers\\UserController.cpp\"",
                "\"${workspaceFolder}\\httplib-server-mvc\\src\\models\\UserModel.cpp\"",
                "\"${workspaceFolder}\\httplib-server-mvc\\resource.o\"",
                "-o",
                "\"${workspaceFolder}\\httplib-server-mvc\\main.exe\"",
                "-I", "E:/repository/_code-source/_C_C++/_learn/mysql-connector-c++-9.1.0-winx64/include",  // 添加 vcpkg 的头文件路径
                "-I", "D:/vcpkg/installed/x64-windows/include",  // 添加 vcpkg 的头文件路径
                "-L", "D:/vcpkg/installed/x64-windows/lib",     // 添加 vcpkg 的库文件路径
                "-lws2_32",
                "-lmysqlcppconnx",
                "-static-libstdc++",
                "-static-libgcc"
                // "-lhttplib"
                // "-g"  // 启用调试信息
            ],
            // 将此任务归类为构建任务。
            "group": "build",
            // 问题匹配器：使用GCC编译器的问题匹配器来捕获编译错误和警告。
            "problemMatcher": [
                "$gcc"
            ],
            // 详细信息：描述任务的来源。
            "detail": "Generated task by VS Code",
            "options": {
                "cwd": "${workspaceFolder}"  // 确保工作目录是项目根目录
            },
            "dependsOn": [
                "Compile Resource"
            ]
        },
        {
            "label": "Compile Resource",
            "type": "shell",
            "command": "windres",
            "args": [
                "\"${workspaceFolder}\\httplib-server-mvc\\resource.rc\"",
                "-O",
                "coff",
                "-o",
                "\"${workspaceFolder}\\httplib-server-mvc\\resource.o\""
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": [],
            "detail": "Compile resource file",
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
    ]
}